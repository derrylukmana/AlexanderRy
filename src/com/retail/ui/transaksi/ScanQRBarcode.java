/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchProdukPanel.java
 *
 * Created on 02 Agu 11, 2:23:12
 */
package com.retail.ui.transaksi;

import com.retail.main.Main;
import com.retail.model.Produk;
import hauw.widget.TableHeaderRenderer;
import hauw.widget.ViewPortGlass;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableRowSorter;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;

import java.awt.image.BufferedImage;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;

import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;

/**
 *
 * @author Hauw
 */
public class ScanQRBarcode extends javax.swing.JDialog implements Runnable, ThreadFactory {

    /**
     * Creates new form SearchProdukPanel
     */
    private static final long serialVersionUID = 6441489157408381878L;
    private Executor executor = Executors.newSingleThreadExecutor(this);
    public Webcam webcam = null;
    private static WebcamPanel panel = null;
    private Produk produk;
    public String codeQRBarcode = null;
    final static boolean shouldFill = true;
    final static boolean shouldWeightX = true;
    final static boolean RIGHT_TO_LEFT = false;

    public ScanQRBarcode() {
        super(Main.getFrameUtama(), true);
        initComponents();
        setLocationRelativeTo(null);
        
        executor.execute(this);
    }

    public String getCodeQRBarcode() {
        setVisible(true);
        return codeQRBarcode;
    }

    public void setCodeQRBarcode(String codeQRBarcode) {
        this.codeQRBarcode = codeQRBarcode;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        darkgrayPanel1 = new paket.launk.java.container.DarkgrayPanel();
        Dimension size = WebcamResolution.QVGA.getSize();
        panelOval1 = new paket.launk.java.container.PanelOval();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        darkgrayPanel1.setName("darkgrayPanel1"); // NOI18N
        darkgrayPanel1.setLayout(new java.awt.BorderLayout());

        panelOval1.setName("panelOval1"); // NOI18N

        javax.swing.GroupLayout panelOval1Layout = new javax.swing.GroupLayout(panelOval1);
        panelOval1.setLayout(panelOval1Layout);
        panelOval1Layout.setHorizontalGroup(
            panelOval1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 457, Short.MAX_VALUE)
        );
        panelOval1Layout.setVerticalGroup(
            panelOval1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );

        darkgrayPanel1.add(panelOval1, java.awt.BorderLayout.LINE_END);
        webcam = Webcam.getWebcams().get(0);
        webcam.setViewSize(size);
        panel = new WebcamPanel(webcam);
        darkgrayPanel1.add(panel, java.awt.BorderLayout.CENTER);

        getContentPane().add(darkgrayPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private paket.launk.java.container.DarkgrayPanel darkgrayPanel1;
    private paket.launk.java.container.PanelOval panelOval1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {

                if ((image = webcam.getImage()) == null) {
                    continue;
                }

                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

                try {
                    result = new MultiFormatReader().decode(bitmap);
                } catch (NotFoundException e) {
                    // fall thru, it means there is no QR code in image
                }
            }

            if (result != null) {
                //JOptionPane.showMessageDialog(null, result.getText());
                //Produk prod = new Produk();
                //prod.setIdProduk(result.getText().toString());
                setCodeQRBarcode(result.getText().toString());
                //JOptionPane.showMessageDialog(null, getIdProd());
                webcam.close();
                this.dispose();




            }

        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "example-runner");
        t.setDaemon(true);
        return t;
    }
//    public static void main(String[] args) {
//        new ScanQRBarcode();
//    }
}
